from PIL import Image
import streamlit as st
import streamlit_analytics
from outhers.utils import check_password

st.set_page_config(
    page_title="Sobre o Projeto",
    page_icon="üëû",
)

with open('files/css/styles.css') as f:
    st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)
    
st.sidebar.image("files/images/logo.png", use_column_width=True)

streamlit_analytics.start_tracking()

if check_password():
    
    st.markdown("""<h1 style="text-align:center">Projeto Beira Rio <br> IA para Reconhecimento de Imagens</h1>""", unsafe_allow_html=True)
    st.markdown("***")

    st.markdown("<h3>1) Objetivo üëû<br></h3>", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:justify">O projeto trata-se do desenvolvimento de um algoritmo para classifica√ß√£o, reconhecimento de cal√ßados semelhantes e avalia√ß√£o das recomenda√ß√µes. Para isso foi utilizada t√©cnicas de tratamento e padroniza√ß√£o de imagens, modelos de machine learning e deep learning e outras ferramentas de desenvolvimento web.</p>""", unsafe_allow_html=True)

    st.markdown("<h3>2) Etapas de Desenvolvimento üë†<br></h3>", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:justify">Para o desenvolvimento do projeto, foram seguidas as seguintes etapas:</p>""", unsafe_allow_html=True)
    image = Image.open('files/images/Etapas de Desenvolvimento.png')
    st.image(image)
    
    st.markdown("<h4>2.1) Modelo para Classifica√ß√£o<br></h4>", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:justify">Para o desenvolvimento do modelo de classifica√ß√£o, foram seguidas as seguintes etapas:</p>""", unsafe_allow_html=True)
    st.markdown("""
                <ul style='list-style-type:decimal'>
                    <li>Conhecimento e coleta e prepara√ß√£o dos dados: A primeira etapa do processo foi coletar uma grande quantidade de imagens de cal√ßados das classes desejadas (por exemplo, t√™nis, sapatos, botas, etc.). Essas imagens foram coletadas do branco de dados da Beira Rio. Em seguida, as imagens foram preparadas para o treinamento, incluindo etapas como redimensionar, dividir em conjuntos de treinamento e valida√ß√£o, e normalizar;</li>
                    <li>Constru√ß√£o da rede: A segunda etapa foi construir a rede neural VGG16. Isso incluiu a escolha da arquitetura, configura√ß√£o dos hiperpar√¢metros e compila√ß√£o da rede;</li>
                    <li>Treinamento da rede: A terceira etapa foi treinar a rede com o conjunto de dados preparado. Isso incluiu o uso de t√©cnicas de otimiza√ß√£o, como o algoritmo de otimiza√ß√£o Adam, e ajustes de hiperpar√¢metros para melhorar o desempenho da rede;</li>
                    <li>Avalia√ß√£o e otimiza√ß√£o: Ap√≥s o treinamento, a rede foi avaliada usando o conjunto de valida√ß√£o e otimizada com base nos resultados. Isso incluiu ajustes adicionais nos hiperpar√¢metros e ajustes na arquitetura da rede;</li>
                    <li>Implanta√ß√£o: Finalmente, a rede treinada foi implantada em um sistema de classifica√ß√£o de cal√ßados. Isso incluiu a integra√ß√£o da rede com outras partes do sistema, como captura de imagens e interface do usu√°rio.</li>
                </ul>""", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:justify">Uma matriz de confus√£o √© uma ferramenta comumente utilizada para avaliar o desempenho de um modelo de aprendizado de m√°quina. Ela permite visualizar a precis√£o do modelo ao classificar exemplos em diferentes categorias.</p>""", unsafe_allow_html=True)

    st.markdown("""<p style="text-align:justify">Neste projeto, utilizamos uma matriz de confus√£o para avaliar o desempenho de um modelo de classifica√ß√£o de imagens. A matriz foi constru√≠da com base no conjunto de dados de valida√ß√£o, comparando as classifica√ß√µes do modelo com as classifica√ß√µes corretas.""", unsafe_allow_html=True)

    st.markdown("""<p style="text-align:justify">A matriz de confus√£o consiste em uma tabela quadrada, onde cada linha representa uma classe real e cada coluna representa uma classe prevista pelo modelo. Cada c√©lula na matriz representa o n√∫mero de exemplos que foram classificados corretamente (na diagonal principal) ou incorretamente (fora da diagonal principal) pelo modelo.""", unsafe_allow_html=True)
    st.metric(label="Acur√°cia", value="89%")
    image = Image.open('files/images/Modelo de Classifica√ß√£o.png')
    st.image(image)
    
    st.markdown("<h4>2.2) Modelo para Recomenda√ß√£o<br></h4>", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:justify">Para o desenvolvimento do projeto, foram seguidas as seguintes etapas:</p>""", unsafe_allow_html=True)
    st.markdown("""
                <ul style='list-style-type:decimal'>
                    <li>Pr√©-processamento dos dados: A primeira etapa foi o pr√©-processamento dos dados, incluindo a coleta de imagens de cal√ßados, a prepara√ß√£o de dados e a normaliza√ß√£o;</li>
                    <li>Treinamento da VGG16: A segunda etapa foi treinar uma VGG16 com as imagens de cal√ßados para extrair caracter√≠sticas das imagens, foi utilizado o modelo de classifica√ß√£o com as camadas anteriores para obter as caracteristicas;</li>
                    <li>C√°lculo do coeficiente de similaridade: A terceira etapa foi calcular o coeficiente de similaridade entre os conjuntos de caracter√≠sticas de cada cal√ßado. Foi utilizado o cosseno, que √© um dos m√©todos mais utilizados para medir a similaridade entre vetores;</li>
                    <li>Recomenda√ß√£o: Finalmente, o modelo foi implementado como um sistema de recomenda√ß√£o, onde o usu√°rio pode escolher um cal√ßado e o sistema recomenda cal√ßados similares baseado no coeficiente de similaridade calculado.</li>
                </ul>""", unsafe_allow_html=True)
    
    st.markdown("<h4>2.3) Modelo de Avalia√ß√£o<br></h4>", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:justify">O modelo √© baseado em uma VGG16 e √© classificado binariamente, onde 0 representa uma recomenda√ß√£o ruim e 1 representa uma recomenda√ß√£o boa. Este processo foi aplicado com sucesso em projetos passados e tem sido usado como refer√™ncia para projetos futuros.</p>""", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:justify">Para o desenvolvimento do projeto, foram seguidas as seguintes etapas:</p>""", unsafe_allow_html=True)
    st.markdown("""
                <ul style='list-style-type:decimal'>
                    <li>Coleta e prepara√ß√£o dos dados: A primeira etapa foi coletar imagens de cal√ßados e criar uma base de dados de recomenda√ß√µes, com informa√ß√µes sobre se a recomenda√ß√£o foi considerada boa ou ruim pelos usu√°rios. Em seguida, os dados foram divididos em conjuntos de treinamento e valida√ß√£o;</li>
                    <li>Treinamento da VGG16: A segunda etapa foi treinar uma VGG16 com as imagens de cal√ßados e suas respectivas recomenda√ß√µes para classificar as recomenda√ß√µes como boas ou ruins;</li>
                    <li>Teste e ajuste de hiperpar√¢metros: A terceira etapa foi testar o modelo com o conjunto de valida√ß√£o e ajustar hiperpar√¢metros para melhorar o desempenho do modelo;</li>
                    <li>Implanta√ß√£o: Finalmente, o modelo foi implantado em um sistema de recomenda√ß√£o de cal√ßados, onde ele √© usado para avaliar se as recomenda√ß√µes s√£o boas ou ruins para os usu√°rios.</li>
                </ul>""", unsafe_allow_html=True)
    st.metric(label="Acur√°cia", value="84%")
    image = Image.open('files/images/Modelo de Avalia√ß√£o.png')
    st.image(image)
    
    st.markdown("<h4>2.4) Modelo de Cria√ß√£o de Novos Cal√ßados<br></h4>", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:justify">Al√©m dos modelos apresentados acima, um modelo tamb√©m foi implementado para demonstra√ß√£o ao cliente. Foi criado um pipeline de GAN (rede geradora advers√°ria) com o objetivo de gerar novas imagens de cal√ßados a partir de duas imagens de cal√ßados de entrada. Este processo foi aplicado com sucesso em projetos passados e tem sido usado como refer√™ncia para projetos futuros.</p>""", unsafe_allow_html=True)
    
    st.markdown("""<p style="text-align:justify">Algumas demonstra√ß√µes do potencial do modelo de cria√ß√£o de novos cal√ßados:</p>""", unsafe_allow_html=True)
    st.markdown("""<p style="text-align:center"><strong>Combinando Caracter√≠sticas Duas Botas e Gerando Novos Cal√ßados</strong></p>""", unsafe_allow_html=True)
    image = Image.open('files/images/Combina√ß√£o de Cal√ßados 1.png')
    st.image(image)
    st.markdown("""<p style="text-align:center"><strong>Combinando Caracter√≠sticas Dois T√™nis Esportivos e Gerando Novos Cal√ßados</strong></p>""", unsafe_allow_html=True)
    image = Image.open('files/images/Combina√ß√£o de Cal√ßados 2.png')
    st.image(image)
    st.markdown("""<p style="text-align:center"><strong>Combinando Caracter√≠sticas Bota com Scarpin e Gerando Novos Cal√ßados</strong></p>""", unsafe_allow_html=True)
    image = Image.open('files/images/Combina√ß√£o de Cal√ßados 3.png')
    st.image(image)
    st.markdown("""<p style="text-align:center"><strong>Combinando Caracter√≠sticas Dois Scarpins e Gerando Novos Cal√ßados</strong></p>""", unsafe_allow_html=True)
    image = Image.open('files/images/Combina√ß√£o de Cal√ßados 4.png')
    st.image(image)

    st.markdown("<h3>3) Parceria ü•æ<br></h3>", unsafe_allow_html=True)
    image = Image.open('files/images/parceria.png')
    st.image(image)
    st.markdown("")
    
streamlit_analytics.stop_tracking()